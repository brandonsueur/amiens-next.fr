"use client";

import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { Container } from "../container";
import { SectionTitle } from "../sectionTitle";
import { SquareArrowDownRight, SquareArrowRight } from "lucide-react";
import clsx from "clsx";

interface FAQItem {
  id: string;
  question: string;
  answer: string | string[] | React.ReactElement;
}

const faqData: FAQItem[] = [
  {
    id: "amiensnext-1",
    question: "Qu‚Äôest-ce qu‚ÄôAmiens Next ?",
    answer:
      "Amiens Next est le collectif de la nouvelle g√©n√©ration d‚Äôentrepreneurs Ami√©nois. Il rassemble freelances, dirigeants, artisans et startupers qui souhaitent √©changer, collaborer, innover et faire grandir leurs projets ensemble. Chaque rencontre est une opportunit√© de cr√©er du lien et de faire avancer son business localement.",
  },
  {
    id: "amiensnext-2",
    question: "Qui peut rejoindre Amiens Next ?",
    answer:
      "Le collectif est ouvert √† tous les profils entrepreneuriaux : freelances, dirigeants, artisans, commer√ßants, startupers et porteurs de projets. Ce qui compte avant tout, c‚Äôest l‚Äôenvie de partager, de progresser et de contribuer au dynamisme √©conomique local.",
  },
  {
    id: "amiensnext-3",
    question: "Y a-t-il un co√ªt d‚Äôadh√©sion ?",
    answer:
      "Oui, une adh√©sion annuelle symbolique permet de soutenir le collectif et de participer aux √©v√©nements (afterworks, matinales, talks). Elle garantit aussi la qualit√© des √©changes et le bon fonctionnement de la communaut√©.",
  },
  {
    id: "amiensnext-4",
    question: "Quels types d‚Äô√©v√©nements organisez-vous ?",
    answer: (
      <ul className="list-disc list-inside space-y-2">
        <li>‚òï Matinales business pour √©changer sur vos projets et actus</li>
        <li>üç∑ Afterworks pour r√©seauter dans une ambiance conviviale</li>
        <li>üé§ Talks inspirants avec des invit√©s locaux et nationaux</li>
      </ul>
    ),
  },
  {
    id: "amiensnext-5",
    question: "Pourquoi rejoindre Amiens Next ?",
    answer:
      "Rejoindre Amiens Next, c‚Äôest int√©grer une communaut√© d‚Äôentrepreneurs engag√©s, gagner en visibilit√©, d√©velopper son r√©seau local et trouver des opportunit√©s concr√®tes. C‚Äôest aussi b√©n√©ficier d‚Äôun cadre bienveillant o√π l‚Äôentraide et l‚Äô√©change priment sur la comp√©tition.",
  },
  {
    id: "amiensnext-6",
    question: "Comment se d√©roule une rencontre Amiens Next ?",
    answer:
      "Chaque rencontre dure environ 1h √† 2h, dans un lieu convivial √† Amiens ou alentours. L‚Äôid√©e est de cr√©er des √©changes sinc√®res, d‚Äôapprendre les uns des autres et de repartir avec des connexions utiles, sans perdre de temps apr√®s une journ√©e de travail.",
  },
  {
    id: "amiensnext-7",
    question: "Puis-je proposer mon entreprise pour appara√Ætre dans le Guide ?",
    answer:
      "Oui ! Si vous √™tes entrepreneur ou artisan √† Amiens, vous pouvez proposer votre entreprise pour √™tre int√©gr√©e au Guide Amiens Next. Il s‚Äôagit d‚Äôune s√©lection locale valorisant les acteurs de confiance de la r√©gion.",
  },
  {
    id: "amiensnext-8",
    question: "Comment √™tre inform√© des prochains √©v√©nements ?",
    answer:
      "Vous pouvez suivre Amiens Next sur Instagram et LinkedIn, ou vous inscrire √† la newsletter pour recevoir le calendrier des √©v√©nements √† venir et les nouveaut√©s du collectif.",
  },
];

export function FAQ() {
  const [openItems, setOpenItems] = useState<Set<string>>(new Set(["toto-1"]));

  const toggleItem = (id: string) => {
    const newOpenItems = new Set(openItems);
    if (newOpenItems.has(id)) {
      newOpenItems.delete(id);
    } else {
      newOpenItems.add(id);
    }
    setOpenItems(newOpenItems);
  };

  return (
    <section className="py-16 px-6">
      <Container>
        <SectionTitle
          subTitle="FAQ"
          title="Questions fr√©quentes"
          description="Retrouvez ici les r√©ponses aux questions que nos clients nous posent le plus souvent, pour vous aider √† mieux comprendre nos services et nos engagements."
        />

        {/* FAQ Items */}
        <div className="space-y-0 border border-[#4A4A4A] rounded-lg overflow-hidden">
          {faqData.map((item, index) => (
            <div
              key={item.id}
              className={index !== 0 ? "border-t border-[#4A4A4A]" : ""}
            >
              {/* Question Button */}
              <button
                onClick={() => toggleItem(item.id)}
                className="w-full flex cursor-pointer items-center justify-between p-6 text-left transition-colors duration-200"
              >
                <div className="flex items-center space-x-4">
                  <div className="flex-shrink-0 w-8 h-8 rounded-full flex items-center justify-center">
                    <motion.div className="text-black font-bold text-lg">
                      {openItems.has(item.id) ? (
                        <SquareArrowDownRight className="text-secondary" />
                      ) : (
                        <SquareArrowRight className="text-black" />
                      )}
                    </motion.div>
                  </div>
                  <h3
                    className={clsx(
                      "text-black text-xl font-semibold font-ca-slalom",
                      openItems.has(item.id) ? "text-secondary" : ""
                    )}
                  >
                    {item.question}
                  </h3>
                </div>

                <motion.div
                  animate={{ rotate: openItems.has(item.id) ? 180 : 0 }}
                  transition={{ duration: 0.2 }}
                  className="flex-shrink-0 ml-4"
                >
                  <svg
                    className="w-5 h-5 text-gray-400"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M19 9l-7 7-7-7"
                    />
                  </svg>
                </motion.div>
              </button>

              {/* Answer */}
              <AnimatePresence>
                {openItems.has(item.id) && (
                  <motion.div
                    initial={{ height: 0, opacity: 0 }}
                    animate={{ height: "auto", opacity: 1 }}
                    exit={{ height: 0, opacity: 0 }}
                    transition={{ duration: 0.3, ease: "easeInOut" }}
                    className="overflow-hidden border-t border-[#4A4A4A]"
                  >
                    <div className="p-6 bg-white ">
                      {Array.isArray(item.answer) ? (
                        <div className="space-y-4">
                          {item.answer.map((paragraph, idx) => (
                            <p key={idx} className="text-black font-epilogue">
                              {paragraph}
                            </p>
                          ))}
                        </div>
                      ) : (
                        <p className="text-gray-500 font-epilogue">
                          {item.answer}
                        </p>
                      )}
                    </div>
                  </motion.div>
                )}
              </AnimatePresence>
            </div>
          ))}
        </div>
      </Container>
    </section>
  );
}
